require(arules)
enemCandidatesfile=read.transactions("E:/Documents/DOCUMENTOS FACULDADE/TCC/Microdados_Enem_Amostragem.csv",sep=",")
View(enemCandidatesfile)
enemCandidatesfile
enemCandidatesfile<-enemCandidatesfile[-1,]
View(enemCandidatesfile)
Rule<-apriori(enemCandidatesfile,parameter = list(support=0.04,confidence=0.2,minlen=2,maxlen=4))
df=data.frame(lhs=labels(lhs(Rule)),rhs=labels(rhs(Rule)),Rule@quality)
View(df)
View(enemCandidatesfile@itemsetInfo)
View(enemCandidatesfile)
enemCandidatesfile@itemsetInfo
View(enemCandidatesfile@itemsetInfo)
enemCandidatesfile@data
View(enemCandidatesfile)
View(enemCandidatesfile)
View(Rule)
View(df)
Rule<-apriori(enemCandidatesfile,parameter = list(support=0.07,confidence=0.9,minlen=2,maxlen=4))
df=data.frame(lhs=labels(lhs(Rule)),rhs=labels(rhs(Rule)),Rule@quality)
View(df)
View(df)
Rule<-apriori(enemCandidatesfile,parameter = list(support=0.7,confidence=0.9,minlen=2,maxlen=4))
df=data.frame(lhs=labels(lhs(Rule)),rhs=labels(rhs(Rule)),Rule@quality)
Rule<-apriori(enemCandidatesfile,parameter = list(support=0.6,confidence=0.8,minlen=2,maxlen=4))
df=data.frame(lhs=labels(lhs(Rule)),rhs=labels(rhs(Rule)),Rule@quality)
inspect(tranx)
inspect(enemCandidatesfile)
summarize(enemCandidatesfile)
summary(enemCandidatesfile)
View(Rule)
summary(Rule)
summary(df)
View(Rule)
View(df)
summary(Rule)
summary(enemCandidatesfile)
inspect(Rule)
inspect(enemCandidatesfile)
inspect(Rule[1:10])
View(Rule)
library(rjdbc)
install.packages(rjdbc)
install.packages(RJDBC)
install.packages("RJDBC")
driver <- JDBC(driverClass = "cdata.jdbc.aas.AASDriver", classPath = "MyInstallationDir\lib\cdata.jdbc.aas.jar", identifier.quote = "'")
library(RJDBC)
driver <- JDBC(driverClass = "cdata.jdbc.aas.AASDriver", classPath = "MyInstallationDir\lib\cdata.jdbc.aas.jar", identifier.quote = "'")
driver <- JDBC(driverClass = "cdata.jdbc.aas.AASDriver", classPath = "MyInstallationDir\lib\cdata.jdbc.aas.jar", identifier.quote = "'")
install.packages("ISLR")
